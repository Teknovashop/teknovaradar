name: Radar Tecnológico (daily)

on:
  workflow_dispatch:
  schedule:
    - cron: "13 4 * * *" # diario aprox 04:13 UTC

jobs:
  run:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 lxml

      # --- UE TED (best effort, no falla si 404) ---
      - name: Scraper TED (UE)
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE }}
        run: |
          python scraper/scraper_radar.py || true

      # --- Diagnóstico PLACSP (no bloquea) ---
      - name: Diagnóstico PLACSP (feeds e items)
        env:
          PLACSP_FEEDS: ${{ secrets.PLACSP_FEEDS }}
        run: |
          python - << 'PY'
          import os, requests, xml.etree.ElementTree as ET
          UA = {
            "User-Agent": "Mozilla/5.0 Radar-Diag/1.2",
            "Accept": "application/atom+xml, application/rss+xml, application/xml, text/xml, */*",
            "Accept-Language": "es-ES,es;q=0.9",
          }
          feeds = os.environ.get("PLACSP_FEEDS","").strip()
          print("[DIAG] PLACSP_FEEDS presente:", bool(feeds))
          lst = [u.strip() for u in feeds.split(",") if u.strip()]
          print("[DIAG] Nº feeds:", len(lst))
          if lst:
              url = lst[0]
              print("[DIAG] Primer feed:", url)
              try:
                  r = requests.get(url, timeout=60, headers=UA, allow_redirects=True)
                  print("[DIAG] HTTP status:", r.status_code, "bytes:", len(r.content))
                  ET.fromstring(r.content)
                  print("[DIAG] XML válido ✔")
              except Exception as e:
                  print("[DIAG] No es XML válido (probable portal/HTML).", e)
          PY

      # --- España: BOE (scrape sumarios HTML, última semana) ---
      - name: Scraper España (BOE)
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE }}
        run: |
          python scraper/scraper_spain_boe.py

      # --- España: CCAA (best effort; no bloquea si timeouts) ---
      - name: Scraper España (CCAA)
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE }}
          CCAA_FEEDS: ${{ secrets.CCAA_FEEDS }}
        run: |
          python scraper/scraper_spain_ccaa.py || true

      # --- España: PLACSP (lo dejamos “best effort” por ahora) ---
      - name: Scraper España (PLACSP)
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE }}
          PLACSP_FEEDS: ${{ secrets.PLACSP_FEEDS }}
          STRICT_FILTER: "false"
          MAX_ITEMS: "150"
        run: |
          python scraper/scraper_spain_placsp.py || true
